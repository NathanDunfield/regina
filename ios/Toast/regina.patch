diff --git a/ios/Toast/UIView+Toast.m b/ios/Toast/UIView+Toast.m
index 00408d5..73510c5 100644
--- a/ios/Toast/UIView+Toast.m
+++ b/ios/Toast/UIView+Toast.m
@@ -209,8 +209,16 @@ static const NSString * CSToastActivityViewKey  = @"CSToastActivityViewKey";
 - (CGPoint)centerPointForPosition:(id)point withToast:(UIView *)toast {
     if([point isKindOfClass:[NSString class]]) {
         // convert string literals @"top", @"bottom", @"center", or any point wrapped in an NSValue object into a CGPoint
+        CGSize statusBarFrame = UIApplication.sharedApplication.statusBarFrame.size;
+        // Note: whether we want width or height seems to depend on *both* (i) portrait vs landscape, and (ii) ios7 vs ios8.
+        // Just take the min, which is safe.
+        CGFloat statusBarHeight = MIN(statusBarFrame.width, statusBarFrame.height);
         if([point caseInsensitiveCompare:@"top"] == NSOrderedSame) {
-            return CGPointMake(self.bounds.size.width/2, (toast.frame.size.height / 2) + CSToastVerticalPadding);
+            return CGPointMake(self.bounds.size.width/2,
+                               (toast.frame.size.height / 2) + CSToastVerticalPadding + statusBarHeight);
+        } else if ([point caseInsensitiveCompare:@"topright"] == NSOrderedSame) {
+            return CGPointMake((self.bounds.size.width - (toast.frame.size.width / 2)) - CSToastHorizontalPadding - statusBarHeight,
+                               (toast.frame.size.height / 2) + CSToastVerticalPadding + statusBarHeight);
         } else if([point caseInsensitiveCompare:@"bottom"] == NSOrderedSame) {
             return CGPointMake(self.bounds.size.width/2, (self.bounds.size.height - (toast.frame.size.height / 2)) - CSToastVerticalPadding);
         } else if([point caseInsensitiveCompare:@"center"] == NSOrderedSame) {
