/* Define if both signed and unsigned long long types are available. */
#cmakedefine LONG_LONG_FOUND

/* Define if both int128_t and uint128_t types are available. */
#cmakedefine INT128_T_FOUND

/* Define if both __int128_t and __uint128_t types are available. */
#cmakedefine __INT128_T_FOUND

/* Define if native 128-bit arithmetic is available through either
   of the types defined above. */
#cmakedefine INT128_AVAILABLE

/* Define if 64-bit integer literals are available with no suffix */
#cmakedefine NUMERIC_64_FOUND

/* Define if 64-bit integer literals are available using the LL suffix */
#cmakedefine NUMERIC_64_LL_FOUND

/* Define if Boost.Python is available. */
#cmakedefine BOOST_PYTHON_FOUND

/* Define if langinfo.h and nl_langinfo() are available. */
#cmakedefine LANGINFO_FOUND

/* Define if we are replacing Tokyo Cabinet with the older QDBM. */
#cmakedefine QDBM_AS_TOKYOCABINET

/* Define if we are excluding Normaliz from the build. */
#cmakedefine EXCLUDE_NORMALIZ

/* Define if we are excluding SnapPea / SnapPy from the build. */
#cmakedefine EXCLUDE_SNAPPEA

/* Define as const if the declaration of iconv() needs const, or empty if not. */
#define ICONV_CONST @ICONV_CONST@

/* Define to Regina's primary home directory on the system.
   This can always be changed at runtime vi NGlobalDirs::setDirs(). */
#define REGINA_DATADIR "@PKGDATADIR@"

/* Define to the directory on the system in which Regina's python module is
   installed, or the empty string if the module is installed in a standard
   python location (i.e., it can be found automatically on python's sys.path).
   This can always be changed at runtime vi NGlobalDirs::setDirs(). */
#define REGINA_PYLIBDIR "@PYLIBDIR@"

/* Define to the filename extension that we use for census databases. */
#define REGINA_DB_EXT "@DB_EXT@"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the version of this package. */
#define PACKAGE_VERSION "@PACKAGE_VERSION@"

/* Major version number of the package. */
#define PACKAGE_VERSION_MAJOR @PACKAGE_VERSION_MAJOR@

/* Minor version number of the package. */
#define PACKAGE_VERSION_MINOR @PACKAGE_VERSION_MINOR@

