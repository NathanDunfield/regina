<chapter id="options">
 <title>Configuration</title>
 <para>
  &regina; can be configured through the
   <menuchoice>
    <guimenu>Settings</guimenu>
    <guisubmenu>Configure Regina</guisubmenu>
   </menuchoice>
  menu item.  Several configuration pages are available, each of which
  is described here.
 </para>

 <sect1 id="options-general">
  <title>General Options</title>

  <para>
   The following options are available on the general options page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Automatic file extension</glossterm>
    <glossdef><para>
     This option can be toggled on or off; it represents whether a
     filename is modified before a &regina; data file is saved.
     When on, if the user does not specify a filename extension then the
     default extension of <filename>.rga</filename> will be appended.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Automatic packet docking</glossterm>
    <glossdef><para>
     This option can be toggled on or off.  When off, any new packet
     viewers (created when you <link linkend="packet-view">view or edit
     a packet</link>) will be opened in
     separate floating windows.  When on, new packet viewers will be
     docked into the right-hand side of the
     <link linkend="shot-packettree">main &regina; window</link>
     if possible.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Display icon</glossterm>
    <glossdef><para>
     This option can be toggled on or off; it represents whether the
     large &regina; icon will be displayed beneath the packet tree in
     the main window.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Packet tree jump size</glossterm>
    <glossdef><para>
     This specifies how many steps a packet moves within the tree when
     the <guimenuitem>Jump Up</guimenuitem> or
     <guimenuitem>Jump Down</guimenuitem> menu items are selected
     (or the corresponding toolbar buttons pressed).
    </para></glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-triangulation">
  <title>Triangulation Options</title>

  <para>
   The following options are available on the triangulation page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Edit mode</glossterm>
    <glossdef><para>
     This determines whether the triangulation gluings editor uses
     direct edit mode or pop-up dialog mode.  See the
     <link linkend="tri-editgluings">gluings editor documentation</link>
     for details.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default top-level tab</glossterm>
    <glossdef><para>
     This specifies which of the many tabs in the triangulation viewer
     will be made visible when a new triangulation viewer is first opened.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default skeleton tab</glossterm>
    <glossdef><para>
     Within the triangulation viewer, the <guilabel>Skeleton</guilabel>
     tab contains several smaller tabs of its own.  This option specifies which
     of these smaller tabs will be made visible when the
     <guilabel>Skeleton</guilabel> tab is first selected.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default algebra tab</glossterm>
    <glossdef><para>
     Likewise, within the triangulation viewer, the <guilabel>Algebra</guilabel>
     tab contains many smaller tabs of its own.  This option specifies which
     of these smaller tabs will be made visible when the
     <guilabel>Algebra</guilabel> tab is first selected.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Surface calculation threshold</glossterm>
    <glossdef>
     <para>
      This determines how many tetrahedra a triangulation must have
      before properties relating to its normal
      surfaces are not automatically calculated.  See the
      <link linkend="tri-surfaceproperties">normal surface properties
      documentation</link> for details.
     </para>
     <para>
      Note that 3-sphere and 3-ball recognition (two of the properties
      affected by this option) will use a slighly lower threshold than is
      set here.  This is because both involve the
      analysis of almost normal surfaces, which are significantly slower
      than ordinary normal surfaces to work with.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>&gap; executable</glossterm>
    <glossdef>
     <para>
      This tells &regina; where to find &gaplongurl;.  &gap; is not
      required by &regina;, but if it is installed then it can help
      simplify group presentations.  See the
      <link linkend="tri-algebra-fundgroup">fundamental group</link>
      documentation for details.
     </para>
     <para>
      This option should be the name of the command that is used to
      start &gap; (the default is <command>gap</command>).  If &gap; is
      on your default search path, you may simply provide the command
      (such as <filename>gap</filename>);
      otherwise you will need to provide a full path to the executable
      (such as <filename>/usr/local/bin/gap</filename>).
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>&graphviz; executable</glossterm>
    <glossdef>
     <para>
      This tells &regina; where to find &graphvizurl;.  As with &gap;,
      &graphviz; is not required by &regina;, but if it is not installed
      then &regina; cannot display face pairing graphs.
      See the <link linkend="tri-skeleton-facegraph">face pairing graph</link>
      documentation for details.
     </para>
     <para>
      This option should be the name of the particular &graphviz;
      command that is used for drawing undirected graphs.  Note that
      this is generally <emphasis>not</emphasis> called graphviz &mdash;
      &graphviz; is a suite of applications, providing several different
      executables for drawing graphs in several different ways.  The
      recommended executable (and also the default for this
      configuration option) is <command>neato</command>.
     </para>
     <para>
      If the &graphviz; executable is on your default search path, you may
      simply provide the command (such as <filename>neato</filename>);
      otherwise you will need to provide a full path to the executable
      (such as <filename>/usr/local/bin/neato</filename>).
     </para>
     <para><tip><para>
      Although &regina; was designed for the newer &graphviz;
      versions&nbsp;2.x, it can also work with older &graphviz;&nbsp;1.x
      installations.  If you are using &graphviz;&nbsp;1.x then
      you will need to set your &graphviz; executable to <command>dot</command>,
      since older versions of <command>neato</command> cannot display
      multiple edges.  &regina; will check your version of &graphviz;
      and warn you if you seem to be using the wrong executable.
     </para></tip></para>
    </glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-surfaces">
  <title>Normal Surface Options</title>

  <para>
   The following options are available on the normal surfaces page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Default coordinate system</glossterm>
    <glossdef><para>
     This specifies which coordinate system will be offered as the
     default selection when a new normal surface list is created.
     See the
     <link linkend="surfaces-creation">normal surfaces documentation</link>
     for details.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Warn before generating non-embedded surfaces</glossterm>
    <glossdef><para>
     If this option is checked, &regina; will ask for confirmation
     whenever you try to enumerate a list of normal surfaces without
     checking the <guilabel>Embedded surfaces only</guilabel> box.
     This is because immersed and/or singular surfaces can be extremely
     slow to enumerate, and there might be a great number of them.
     See the documentation on
     <link linkend="surfaces-embeddedonly">creating normal surface lists</link>
     for further details.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default top-level tab</glossterm>
    <glossdef><para>
     This specifies which of the many available tabs will be made visible
     when a new normal surface list viewer is first opened.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default compatibility matrix</glossterm>
    <glossdef><para>
     This specifies which matrix will be displayed first when the user
     opens the <guilabel>Compatibility</guilabel> tab for a normal
     surface list.  See the documentation on
     <link linkend="surfaces-compat">compatibility matrices</link>
     for details.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Compatibility matrix threshold</glossterm>
    <glossdef><para>
     Compatibility matrices will not be generated automatically for
     lists that contain a very large number of normal surfaces.
     Here you can specify this limit on the number of surfaces.
     Note that for larger lists you can still generate the matrices
     manually by pressing the <guilabel>Calculate</guilabel> button,
     as described in the
     <link linkend="surfaces-compat">compatibility matrix
     documentation</link>.
    </para></glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-pdf">
  <title>&pdf; Options</title>

  <para>
   This page allows the user to configure how &regina; deals with &pdf;
   packets.
  </para>
  <para>
   &regina; does not contain any explicit code for displaying
   &pdf; documents, and so it must rely on other programs for this task.
   There are two ways in which this can be done:
   <itemizedlist>
    <listitem><para>
     Some programs are able to embed viewers directly within &regina;'s
     main window, complete with toolbars and menu items, as illustrated
     below; these are called <firstterm>embedded viewers</firstterm>.
     Examples of programs that offer embedded viewers include
     &kpdf; and &kghostview;.
    </para>
     <screenshot>
      <mediaobject>
       <imageobject>
        <imagedata fileref="pdf.png"/>
       </imageobject>
      </mediaobject>
     </screenshot>
    </listitem>
    <listitem><para>
     Other programs must be treated as standalone applications that
     operate completely independently of &regina;; these are called
     <firstterm>external viewers</firstterm>.  Examples of external
     viewers include &xpdf; under &linux;, or &previewapp; under
     &macosx;.
    </para></listitem>
   </itemizedlist>
  </para>
  <para>
   The following options are available to configure how &regina;
   displays &pdf; documents:
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Use embedded viewer if possible</glossterm>
    <glossdef><para>
     If this box is checked, &regina; will search for an embedded
     viewer that it can use.  If it cannot find anything suitable,
     &regina; will fall back to an external viewer (in which case it
     will honour the external viewer settings below).
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>External &pdf; viewer</glossterm>
    <glossdef>
     <para>
      If we are using an external viewer, this option specifies the command
      to start the external application.
      If the viewer is on your default search path, you may
      simply provide the command (such as <command>xpdf</command>);
      otherwise you will need to provide a full path to the executable
      (such as <command>/usr/bin/xpdf</command>).
      Examples for this option
      might include <command>xpdf</command>, <command>evince</command>,
      or <command>/usr/bin/open</command> for &macosx; users.
     </para>
     <para>
      You may include additional command-line arguments here
      (so, for instance, &macosx; users might enter
      <command>/usr/bin/open&nbsp;-a&nbsp;Preview</command>).
      &regina; will automatically add the &pdf; filename to the end of
      this command, and the entire command will be passed to a shell for
      execution.
     </para>
     <para>
      You are welcome to leave this option empty, in which case &regina;
      will search for a suitable application.
     </para>
    </glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Automatically close external viewers</glossterm>
    <glossdef>
     <para>
      Because external viewers run as standalone applications, they do not
      need to be closed when &regina; is finished with them (or even
      when &regina; exits completely).
      This option configures whether or not &regina; goes out of its
      way to close external viewers automatically.
     </para>
     <para>
      If this option is checked, &regina; will automatically close an
      external viewer whenever &regina;'s corresponding packet
      viewer is closed.  Likewise, &regina; will automatically close and
      reopen the external viewer whenever &regina;'s corresponding packet
      viewer is refreshed.
     </para>
     <para>
      If this option is not checked, &regina; will never close any
      external viewers automatically; this task will be left up to the
      user.  Be careful, since this might leave you with a lot of
      viewers open after a relatively short time.
     </para>
    </glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-census">
  <title>Census Options</title>

  <para>
   The <link linkend="tri-censuslookup">census lookup facility</link>
   searches for the current triangulation within all available censuses.
   The census options page allows this list of available censuses to be
   configured.
  </para>
  <para>
   Census data files can be added or removed and
   currently active data files can be temporarily disabled.
   Each census should be a single &regina; data file.  The census lookup
   will search through all triangulations in each of the currently
   active files.
  </para>
  <para>
   By pressing the <guibutton>Defaults</guibutton> button, the list will
   be filled with a number of prepackaged censuses that are shipped with
   &regina;.  The <link linkend="tri-censuslookup">census lookup
   documentation</link> describes these prepackaged censuses in further
   detail.
  </para>
 </sect1>

 <sect1 id="options-python">
  <title>&python; Options</title>

  <para>
   The following options are available for fine-tuning the behaviour of
   &python; consoles.
  </para>
  <glosslist>
   <glossentry>
    <glossterm>Auto-indent</glossterm>
    <glossdef><para>
     If this option is set, each new command line will be automatically
     indented to match the previous line.  The indent is inserted into the
     command area and can of course be changed by backspacing or adding
     additional spaces.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Spaces per tab</glossterm>
    <glossdef><para>
     Each command line is indented using spaces only, not tabs.  This option
     controls the number of spaces that are inserted into a command line
     when the <keycap>Tab</keycap> key is pressed.
    </para></glossdef>
   </glossentry>
  </glosslist>

  <sect2 id="python-libraries">
   <title>&python; Libraries</title>

   <para>
    In addition, the &python; options page allows the configuration of
    <firstterm>&python; libraries</firstterm>.  These are files containing
    &python; code that is run at the beginning of every &python;
    session, including every time a &python; console is opened,
    every time a script packet is run and every time the program
    <link linkend="man-regina-python"><command>regina-python</command></link>
    is started.
    See the <link linkend="python-overview">&python; scripting
    overview</link> for general information regarding &python; sessions.
   </para>
   <para>
    The list of currently active libraries is stored in the file
    &regina-libs;, which should be a plain text file
    containing one library filename per line.  Blank lines and lines
    beginning with a hash (#) are ignored.
   </para>
   <para>
    The &python; options page offers a convenient way of managing
    the &regina-libs; file.  Libraries can be added and removed through
    this page and currently active libraries can be temporarily disabled.
   </para>
   <!-- TODO: Put this in once it's reimplemented.
   <para>
    Each library also has a <guibutton>Compile</guibutton> button beside
    it.  Pressing this button will test whether or not the library
    actually compiles under &python;.  The library code will only be
    compiled; it will not be run.
   </para>
   -->
   <tip><para>
    A set of prepackaged &python; libraries that might be of use is
    provided with the &regina; distribution.  These libraries are
    generally installed in
    <filename>/usr/share/regina/pylib</filename> or
    <filename>/usr/local/share/regina/pylib</filename>, though this may differ
    with your distribution.
   </para></tip>
  </sect2>
 </sect1>

 <sect1 id="options-snappea">
  <title>&snappea; Options</title>

  <para>
   Since version &snappeaintro;, part of the &snappea; kernel has
   been included in &regina; for performing certain geometric
   computations.  The results of these computations can be found in
   the <link linkend="tri-snappea"><guilabel>&snappea;</guilabel> tab</link>
   in the triangulation viewer.
  </para>
  <para>
   The following options affect how the &snappea; kernel is used by &regina;.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Allow closed triangulations</glossterm>
    <glossdef>
     <para>
      This specifies whether &regina; is allowed to pass closed
      triangulations to the &snappea; kernel.
     </para>
     <para>
      This is disabled by default, since &snappea; is primarily designed
      for working with ideal triangulations only.  However, if you need
      the results and you know what you are doing, you can enable this option.
     </para>
     <para>
      Note that enabling this option does not mean that
      <emphasis>all</emphasis> closed triangulations will be passed to
      the &snappea; kernel.  There are still other constraints
      that must be satisfied &mdash; in particular, the triangulation must
      have only one vertex.
     </para>
     <para><warning>
      <para>
       Enabling this option may occasionally cause the &snappea; kernel
       to raise a fatal error!  As a result &regina; may crash and
       you may lose any unsaved work.
      </para>
      <para>
       Again this is because &snappea; is primarily designed for working
       with ideal triangulations only.  Please be sure that you know
       what you are doing (and you are willing to save regularly) before
       enabling this option.
      </para>
     </warning></para>
    </glossdef>
   </glossentry>
  </glosslist>
 </sect1>
</chapter>
