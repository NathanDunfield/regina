<chapter id="troubleshooting">
 <title>Troubleshooting and <acronym>FAQ</acronym></title>

 <qandaset>
  <qandadiv id="trouble-running"><title>Running &regina;</title>
   <qandaentry id="trouble-packet-uneditable">
    <question><para>
     I cannot edit a triangulation.  I can view it but I can't change anything.
    </para></question>
    <answer>
     <para>
      If a triangulation has any normal surface lists or angle structure
      lists beneath it, that triangulation must not change.
      This is because normal surfaces and angle structures store their
      coordinates relative to the triangulation, and any changes to the
      triangulation will invalidate these coordinates.
     </para>
     <para>
      If you wish to modify the triangulation,
      <link linkend="packet-clone">try cloning it</link>
      (not the subtree, just the triangulation itself).
      Then you can edit the clone instead.
     </para>
     <para>
      Triangulations that cannot be edited will be marked with a
      small padlock in the packet tree, as seen with the
      figure eight knot complement below.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="padlock.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-handbook-unavailable">
    <question><para>
     I cannot open the &regina; handbook.  I try
     selecting <guilabel>Regina Handbook</guilabel> from the
     <guilabel>Help</guilabel> menu but I get an error message.
    </para></question>
    <answer>
     <para>
      First, remember that if all else fails you can download
      the handbook directly from the &regwebsite;
      (follow the documentation links).  You can even
      <ulink url="http://regina.sourceforge.net/docs/">read it online</ulink>.
     </para>
     <para>
      Otherwise: visit
      &regina;'s <link linkend="options-general">general options</link>
      and uncheck the box marked
      &ldquo;<guilabel>Open handbook in &khelpcenter;</guilabel>&rdquo;.
      &regina; should now try to open the &regina; handbook in your
      favourite web browser.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="trouble-help.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
     <para>
      If you have done this and the web browser starts but it cannot find
      <filename>index.html</filename>, you might have the handbook
      installed in the wrong location.  Please
      <link linkend="services">mail us for assistance</link>, so we can
      try to make it work out of the box for you in a future release.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-pdf">
    <question><para>
     How do I view &pdf; packets?  I click on the packet but I just see
     a box with an error message.
    </para></question>
    <answer>
     <para>
      If you use &macosx;, see <link linkend="trouble-mac-pdf">this
      question</link>.
     </para>
     <para>
      If you use &linux;, the easiest solution is to
      visit &regina;'s <link linkend="options-pdf">&pdf; options</link>,
      switch off the <emphasis>embedded</emphasis> &pdf; viewer,
      and set the <emphasis>external</emphasis> &pdf; viewer to
      your favourite application (such as &xpdf; or &evince;).
      &regina; can usually find a suitable viewer automatically,
      but if your installation is unusual then you may need to provide
      &regina; with the full path to your &pdf; viewer
      (such as <filename>/usr/local/bin/xpdf</filename>).
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="trouble-pdf.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
     <para>
      If you wish to use the embedded &pdf; viewer, you will need to
      have &okular; installed.  &okular; should be shipped with your
      &linux; distrubition; it may be offered as its own package, or it
      may be part of the &kdegraphics; bundle.
     </para>
     <para>
      If you are still having trouble getting &pdf; support working,
      please <link linkend="services">let us know</link> so we can
      fix the problem in a future release.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>

  <qandadiv id="trouble-python"><title>&python; Scripting</title>
   <qandaentry id="trouble-python-disabled">
    <question><para>
     &regina; tells me that &python; scripting has been disabled.
    </para></question>
    <answer>
     <para>
      This means that whoever built your version of &regina; did
      not include &python; support in the build.
     </para>
     <para>
      The best solution is to download a ready-made package from the
      <ulink url="http://regina.sourceforge.net/#download">&regina;
      website</ulink>.  All of the ready-made packages should have
      &python; support built in.
     </para>
     <para>
      If you need to build &regina; yourself from source, make sure you have the
      <ulink url="http://regina.sourceforge.net/source.html#sysreq"><application>&boost-python;</application>
      development files</ulink> installed.
      If not, &regina; will warn you about this when you run
      <command>cmake</command>:
     </para>
<screen>
<prompt>example:~/source/regina/build&gt;</prompt> <userinput>cmake ..</userinput>
-- The C compiler identification is GNU
-- The CXX compiler identification is GNU
...
... (lots of output)
...
-----------------------------------------------------------------------------
-- The following OPTIONAL packages could NOT be located on your system.
-- Consider installing them to enable more features from this software.
-----------------------------------------------------------------------------
   * Boost.Python  &lt;http://www.boost.org/&gt;
     Build Python bindings for Regina

-----------------------------------------------------------------------------

-- Configuring done
-- Generating done
-- Build files have been written to: /Users/bab/source/regina/build
<prompt>example:~/source/regina/build&gt;</prompt>
</screen>
     <para>
      If you are stuck, please mail &reguserlist; for assistance,
      including your <filename>CMakeCache.txt</filename>
      if possible to help diagnose the problem.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-python-typeerror">
    <question><para>
     While working with a &python; object I receive a
     <exceptionname>TypeError</exceptionname> with the message
     &quot;bad argument type for built-in operation&quot;.
     I know the object is valid since I've used it earlier without problems.
    </para></question>
    <answer>
     <para>
      You may have run into an unusual &boost-python; issue regarding
      ownership semantics.  If you have been using tree insertion routines
      such as <function>NPacket.insertChildFirst()</function>,
      <function>NPacket.insertChildLast()</function> or
      <function>NPacket.insertChildAfter()</function>, this is
      particularly likely.
     </para>
     <para>
      See the <link linkend="python-ownership">&python; scripting notes</link>
      for a full discussion of this problem and how to work around it.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-python-sigerror">
    <question><para>
     While calling a &python; function I receive a
     <exceptionname>Boost.Python.ArgumentError</exceptionname> with the message
     &quot;Python argument types did not match C++ signature&quot;.  I'm
     fairly sure I'm passing the right arguments.
    </para></question>
    <answer>
     <para>
      You may have run into the same unusual ownership issue with
      &boost-python; discussed in the
      <link linkend="trouble-python-typeerror">previous question</link>.
      Again, if you have been using tree insertion routines such as
      <function>NPacket.insertChildFirst()</function>,
      <function>NPacket.insertChildLast()</function> or
      <function>NPacket.insertChildAfter()</function>, this is
      particularly likely.
     </para>
     <para>
      See the <link linkend="python-ownership">&python; scripting notes</link>
      for a full discussion of this problem and how to work around it.
     </para>
     <para>
      On the other hand, you may just be calling a function incorrectly.
      You might wish to check the
      <link linkend="python-docs">&api; documentation</link>,
      which describes all of &regina;'s functions and what
      arguments they should take.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>

  <qandadiv id="trouble-macosx"><title>&regina; on &macosx;</title>
   <qandaentry>
    <question><para>
     Can I put &regina; on my dock?
    </para></question>
    <answer>
     <para>
      Yes you can.  Open
      <filename>/sw/opt/kde4/mac/bin/</filename> in the
      <application>Finder</application>.  You should see
      <command>regina-kde</command> (complete with the brown tetrahedron
      icon), and you can drag it straight onto your dock.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="macdock.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question>
     <para>
      Whenever I open or save a file, I get strange errors like
      &ldquo;Could not find mime type ...&rdquo;.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="errmime1.png"/>
       </imageobject>
      </inlinemediaobject>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="errmime2.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
    </question>
    <answer>
     <para>
      These errors are irritating but harmless.  Unfortunately they happen
      from time to time with all &kde; applications on &macosx;, not just
      &regina;.  They are easy to get rid of: just run
      <userinput>/sw/opt/kde4/mac/bin/kbuildsycoca4</userinput> from the
      command prompt.
     </para>
<screen>
<prompt>example:~&gt;</prompt> <userinput>/sw/opt/kde4/mac/bin/kbuildsycoca4</userinput>
kbuildsycoca4(1476)/kdecore (kdelibs) getBundle: getBundle( "/sw/opt/kde4/mac/lib/kde4/libexec/drkonqi" ,  false ) called
...
... (lots of output)
...
<prompt>example:~&gt;</prompt>
</screen>
     <para>
      This should make the mime type errors stop (at least for now).
      Hopefully this will be fixed permanently in later releases of
      &kde4; on &macosx;.
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question>
     <para>
      The file open/save dialog is ugly, and I cannot read any of the file
      or directory names.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="kfiledlg-bad.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
    </question>
    <answer>
     <para>
      Again this seems to be an issue across the board with &kde; on
      &macosx;.  This is easily fixed: change your file dialog from
      <guilabel>Short View</guilabel> to
      <guilabel>Detailed View</guilabel> (in fact anything other than
      <guilabel>Short View</guilabel> will do).
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="kfiledlg-fix.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
     <para>
      The result should be a clear and readable file dialog, and
      &kde; will remember your new view type from now on.
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="kfiledlg-good.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-mac-pdf">
    <question><para>
     I cannot view &pdf; packets.  I just see a big empty grey box.
    </para></question>
    <answer>
     <para>
      At the time of writing,
      &kde;'s &pdf; viewer (&okular;) does not work on &macosx;,
      which means the embedded &pdf; viewer will not work in &regina;.
     </para>
     <para>
      Visit &regina;'s <link linkend="options-pdf">&pdf; settings</link>
      and make sure the embedded viewer is switched off.
      This will make &regina; use an external &pdf; viewer instead
      (which is what you want).
     </para>
     <para>
      <inlinemediaobject>
       <imageobject>
        <imagedata fileref="mac-pdf.png"/>
       </imageobject>
      </inlinemediaobject>
     </para>
     <para>
      As for <emphasis>which</emphasis> external viewer: you can leave
      this empty, and &regina; will know what to do.  Alternatively
      you can suggest <command>/usr/bin/open</command>, which will tell
      &regina; to use whatever &pdf; viewer is your default under &macosx;.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>

  <qandadiv id="trouble-misc"><title>Miscellaneous</title>
   <qandaentry id="trouble-compile">
    <question><para>
     I am having trouble compiling &regina;.
    </para></question>
    <answer>
     <para>
      If you can, it is best to install &regina; from a ready-made
      package.  See the
      <ulink url="http://regina.sourceforge.net/#download">&regina;
      website</ulink> for a list of &linux; distributions
      that have packages available.
     </para>
     <para>
      If you do need to build &regina; yourself, the website offers
      help on
      <ulink url="http://regina.sourceforge.net/source.html">building
      &regina; from source</ulink>.  There is also a page on
      <ulink url="http://regina.sourceforge.net/buildtips.html">building
      &regina; on different distributions</ulink>, which suggests
      <command>cmake</command> options tailored to your specific
      type of machine.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-testsuite">
    <question><para>
     What is the test suite, and how do I run it?
    </para></question>
    <answer>
     <para>
      Sometimes building an application on different
      hardware or against different versions of libraries can produce
      unforseen bugs that do not appear on the developer's machine(s).
      To help guard against such problems, &regina; ships with a rich test
      suite.  The test suite asks &regina; to perform
      different calculations that isolate different portions of its
      mathematical code, and it verifies that &regina; gets all
      the answers correct.
     </para>
     <para>
      You can only run the test suite if you are
      <ulink url="http://regina.sourceforge.net/source.html">building
      &regina; from source</ulink> yourself.
      If you download a ready-made package, the person who built the
      package should have already verified that &regina; passes the
      test suite (as all of the packages on the &regina; website do).
     </para>
     <para>
      You will also need
      <ulink url="http://regina.sourceforge.net/source.html#sysreq"><application>CppUnit</application> installed</ulink>.
      Otherwise the test suite will run but only with the simpler &python;
      tests, not the rich and detailed &cpp; calculation engine tests.
     </para>
     <para>
      To run the test suite, move into your main build
      directory and type <userinput>make test ARGS=-V</userinput>.
      You should see the individual tests being run, as illustrated below.
     </para>
<screen>
<prompt>example:~/source/regina/build&gt;</prompt> <userinput>make test ARGS=-V</userinput>
Running tests...
...
... (some initial output)
...
1: ---------------------------------------
1: Test suite for Regina's python bindings
1: ---------------------------------------
1: 
1: Running euler.test ... ok
1: Running file.test ... ok
...
... (more output)
...
2: Regina calculation engine test suite
2: 
2: NBitmaskTest::sizes... ok.
2: NBitmaskTest::firstLastBit... ok.
2: NBitmaskTest::truncate... ok.
...
... (lots and lots of output)
...
100% tests passed, 0 tests failed out of 2

Total Test time (real) =  19.48 sec
<prompt>example:~/source/regina/build&gt;</prompt>
</screen>
     <para>
      We see from the output above that &regina; passed all of its tests
      (and hopefully this is what you will see too).
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question><para>
     Something else not described in this list has gone
     wrong.  Perhaps something crashed.  Maybe the program gave the wrong
     answer.  Or it could be just a little too slow.
    </para></question>
    <answer>
     <para>
      Please! - mail the authors and let us know.  You are welcome to
      write to us directly (our <link linkend="acknowledgements">email
      addresses are here</link>).  Or even better,
      use the <link linkend="services">&sourceforge; services</link>
      such as the bug tracking system and mailing lists so that the
      problem you report is publicly archived.
     </para>
     <para>
      This program is permanently in development.  There is a very
      long &todo; list, and chances are your problem is on it.  And
      then again chances are it's not.  So please, let us know what you
      think can be fixed or improved.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>
 </qandaset>
</chapter>

