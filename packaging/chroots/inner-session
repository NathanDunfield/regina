#!/bin/bash

# Enable job control, so that the final 'fg' does what it should.
set -m

arch=`uname -m`

if [ -e /etc/issue ]; then
	os=`cat /etc/issue`
elif [ -e /etc/release ]; then
	os=`cat /etc/release`
else
	os=Unknown
fi

# Find a free display number.
for i in `seq 100`; do
	if [ -e "/tmp/.X$i-lock" -o -e "/tmp/.X11-unix/X$i" ]; then
		# This display number is taken.
		i=$(($i+1))
	else
		# Good to go.
		break
	fi
done
if [ -e "/tmp/.X$i-lock" ]; then
	echo "ERROR: Could not find a free display number."
	echo "       Try removing some stale X lock files from /tmp."
	exit 1
fi

USE=:$i
echo "Using display $USE."

# If we aren't symlinking our .Xauthority (for instance, when mounting a
# standalone partition), copy it from the mounted host home directory.
if [ ! -L ~/.Xauthority ]; then
	if [ -e ~/master/.Xauthority ]; then
		cp ~/master/.Xauthority ~/.Xauthority
	else
		echo "ERROR: Could not find a usable .Xauthority file."
		echo "       Is your host home directory mounted?"
		exit 1
	fi
fi

kde=
dbus=
exitwait=
vnc=
xephyr=
case "$os" in
	Ubuntu\ 6.06* )
		distro=Dapper
		exitwait=1
		;;
	Ubuntu\ 7.04* )
		distro=Feisty
		dbus=1
		exitwait=1
		;;
	Ubuntu\ 7.10* )
		distro=Gutsy
		dbus=1
		exitwait=1
		;;
	Ubuntu\ 8.04* )
		distro=Hardy
		dbus=1
		exitwait=1
		xephyr=1
		;;
	Ubuntu\ 8.10* )
		distro=Intrepid
		dbus=1
		exitwait=1
		xephyr=1
		;;
	Debian\ GNU/Linux\ 5.0\ * )
		distro=Lenny
		exitwait=1
		kde=1
		xephyr=1
		;;
	Debian\ GNU/Linux\ */sid\ * )
		distro=Sid
		exitwait=1
		kde=1
		xephyr=1
		;;
	Mandriva\ Linux\ release\ 2007.0\ * )
		distro="Mandriva 2007.0"
		exitwait=1
		kde=1
		;;
	Mandriva\ Linux\ release\ 2007.1\ * )
		distro="Mandriva 2007.1"
		exitwait=1
		kde=1
		xephyr=1
		;;
	Mandriva\ Linux\ release\ 2008.0\ * )
		distro="Mandriva 2008.0"
		exitwait=1
		kde=1
		;;
	Mandriva\ Linux\ release\ 2008.1\ * )
		distro="Mandriva 2008.1"
		exitwait=1
		kde=1
		;;
	Mandriva\ Linux\ release\ 2009.0\ * )
		distro="Mandriva 2009.0"
		exitwait=1
		kde=1
		vnc=1
		;;
	Fedora\ release\ 7\ * )
		distro="Fedora 7"
		exitwait=1
		kde=1
		vnc=1
		;;
	Fedora\ release\ 8\ * )
		distro="Fedora 8"
		exitwait=1
		kde=1
		xephyr=1
		;;
	Fedora\ release\ 9\ * )
		distro="Fedora 9"
		exitwait=1
		kde=1
		if [ "$arch" = "i686" ]; then
			# Xephyr looks much better with KDE4, but seems to break on x86_64.
			xephyr=1
		fi
		;;
	Fedora\ release\ 10\ * )
		distro="Fedora 10"
		exitwait=1
		kde=1
		vnc=1
		;;
	?Welcome\ to\ openSUSE\ 10.2\ * )
		distro="SuSE 10.2"
		exitwait=1
		kde=1
		;;
	?Welcome\ to\ openSUSE\ 10.3\ * )
		distro="SuSE 10.3"
		exitwait=1
		kde=1
		xephyr=1
		;;
	?Welcome\ to\ openSUSE\ 11.0\ * )
		distro="SuSE 11.0"
		exitwait=1
		kde=1
		xephyr=1
		;;
	* )
		distro=Unknown
		exitwait=1
		kde=1
		;;
esac

title="$distro ($arch)"
echo "Starting embedded server for $title ..."
if [ "$xephyr" = 1 ]; then
	DISPLAY=:0 Xephyr -screen 1024x768 $USE &
	sleep 1
elif [ "$vnc" = 1 ]; then
	vncserver $USE -name "$title" 
	echo; echo; echo "VNC server is running on $USE, please connect."
	echo; echo
else
	# Use Xnest in most cases; Xephyr in a chroot has some serious problems
	# with ubuntu feisty and gutsy.
	Xnest -display :0 -geometry 1024x768 -name "$title" $USE &
	sleep 1
fi

if [ "$kde" = 1 ]; then
	session=startkde
else
	session=gnome-session
fi

if [ "$dbus" = 1 ]; then
	DISPLAY=$USE /usr/bin/dbus-launch --exit-with-session "$session"
else
	DISPLAY=$USE "$session"
fi

# Terminate the X server.
if [ "$vnc" = 1 ]; then
	vncserver -kill $USE
else
	kill %1
fi

# And wait for internal GNOME programs to shut down.
if [ "$exitwait" = 1 ]; then
	echo
	echo "Politely waiting on daemons to shut down..."
	sleep 45s
fi
